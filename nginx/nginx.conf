## http://nginx.org/en/docs/ngx_core_module.html#events 공식문서에서 참조함

worker_processes auto;
# 작업자 프로세스의 수를 정ㅢ함. CPU 코어 수로 설정하는 것이 보편적으로 좋음.. auto => 알아서 해줘
worker_cpu_affinity auto;
# 위에서 만든 작업자 프로세스를 cpu에 바인딩함 => 
# 작업 자 4명 => 0001 0010 0100 1000 이런 식으로 비트마스크로 표시함!
worker_priority -1;
# 작업자 프로세스에 대한 스케줄링 우선순위 -20 ~ 20까지

events {
    use epoll;
    worker_connections 1024;
}
# events{} = > 연결 처리에 영향을 미치는 지시문이 지정되는 구성 파일 컨텍스트를 제공합니다.
# use 작업자 프로세스에서 사용하는 자격 증명 
# worker_connections 작업자 프로세스에서 열 수 있는 최대 동시 연결 수

http {
    server_names_hash_bucket_size 64;
    # 서버 이름을 담아 놓는 버킷 사이즈를 64로 (기본값 32)
    default_type application/octet-stream;
    ## https://stackoverflow.com/questions/71880042/default-type-application-octet-stream-in-nginx-conf-file
    
    #  nginx가 사용할 mine type 설정
    #  mine type => 클라이언트에게 전송된 문서의 다양성을 알려주기 위한 메커니즘.
    #  => 전달된 문서 타입이 저런식이다
    sendfile on;
    send_timeout 3600;
    # 클라이언트가 이 시간 내에 아무것도 수신하지 않으면 연결이 닫힘. 연속 작업 사이에서만 설정됨. 
    client_max_body_size 10240M;
    # 클라이언트 요청 본문의 최대 허용 크기
    tcp_nopush on;
    tcp_nodelay on;
    ## http://egloos.zum.com/edendev/v/3257937
    # 소켓옵션 TCP_CORK 사용 여부. 
    # sendfile on; 일 때에만 사용 가능
    # HTTP Header를 한 패킷에 전송하므로서, 서버 트래픽을 감소 시킴.

    keepalive_timeout 300s;
    # 서버 측에서 열린 상태로 유지되는 시간
    keepalive_requests 200;
    # 연결이 유치된 채로 처리할 수 있는 최대 요청 수
    reset_timedout_connection on;
    # 시간 초과된 연결 이나 잘못된 코드로 닫힌 연결을 재설정하거나 비활성화할 지 결정
    server_tokens off;
    # 서버 응답 헤더에 nginx 버전을 보낼래?
    
    # SSL
    ssl_certificate /etc/ssl/cert.pem;
    ssl_certificate_key /etc/ssl/cert.key;
    ssl_dhparam /etc/ssl/dhparam.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES;
    ssl_ecdh_curve X25519;

    resolver 127.0.0.53;

    # Logging
    log_format  main_ext  '$remote_addr - $cookie_nc_username [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '"$host" sn="$server_name" '
                          'rt=$request_time ';

    access_log /var/log/nginx/access.log main_ext;
    error_log /var/log/nginx/error.log warn;

    # vHosts
    include /etc/nginx/vhosts/*.vhost;
}