SSL의 동작방법은 ?

SSL은 암호화된 데이터를 전송하기 위해서 공개키와 대칭키를 혼합해서 사용함. 클라이언트와 서버가 주고 받은 실제 정보는 대칭키 방식으로 암호화하고, 대칭키 방식으로 암호화된 실제 정보를 복호화할 때 사용할 대칭키는 공개키 방식으로 암호화해서 클라이언트와 서버가 주고 받음.

간단히 말하면 
실제 데이터 : 대칭키
대칭키의 키 : 공개키

왜 공개키로 사용 안 할까? 왜냐면 공개키 방식은 컴퓨팅 능력을 많이 사용하기 떄문임 성능상의 문제!

컴퓨터와 컴퓨터가 통신하는 단계

1. 악수 -> 전송 -> 세션종료

전송에서 실제 데이터가 전송이 일어남.

1. handshake (가장 복잡하고 중요함)
:데이터를 주고 받기 전에 초기 만남에서 이뤄지는 과정.

이 때 SSL 인증서를 주고 받는데, 인증서에 포함된 서버 측 공개키의 역할은 ????????

handshake 과정 내에서 클라이언트와 서버가 통신하는 과정은 다음과 같다.

1. 클라이언트가 서버에 접속한다. 이 단계를 클라이언트 헬로! 라고 함. 
  - 클라이언트 측에서 생성한 랜덤 데이터를 서버로 전송
  - 클라이언트가 지원하는 암호화 방식을 서버 쪽에 전송
  - 세션 아이디 : 이미 SSL 핸드쉐이킹을 했다면 비용과 시간을 절약하기 위해서 기존의 세션을 재활용하게 되는데 이 때 사용할 연결에 대한 식별자를 서버 측으로 전송한다.

2. 서버는 client hello에 대한 응답을 server hello를 하게 된다. 이 단계에서 주고 받는 정보는 아래와 같다.
  - 서버 측에서 생성한 랜덤 데이터 클라이언트로 전송
  - 서버가 선택한 클라이언트 암호화 방식을 전송
  - 인증서!!

3. 클라이언트는 서버가 전송한 인증서에 어떤 CA에 의해서 발급된지 확인하고 이게 브라우저에 포함된 CA 리스트인지 확인하고 참이면 그 인증 기관에 대한 공개키를 이미 내장해 있기 때문에 이를 이용해 복호화가 된다면 인증서가 틀림 없이 그 인증 기관에 의해서 발급된 인증서라는 것을 확인할 수 있고 내가 접속할 서비스가 실제로 안전한 곳이다라는 것을 알 수 있음.


클라이언는 1 -랜덤 데이터, 2 -랜덤 데이터를 조합해서 pre master secret라는 키를 생성함. 
절대 제 3자에게 노출되어서는 안됨. 왜냐면 대칭키이기 때문에..

이걸 보내기 위해서 공개키를 사용하는데 이 때 사용하는 것이 인증서 안에 저장되어 있던 서버의 공개키임. 공개키로 암호화해서 서버로 보내주면 어차피 서버는 비밀키를 갖고 있으니 암호화하면 되니까!

서버는 클라이언트가 전송한 pre master secret 값을 자신의 비공개키로 복호화한다. 그리고 서버와 클라이언트는 모두 일련의 과정을 거쳐서 master secret 만듬. master secret는 session key를 생성하는데, 이 세션 키 값을 이용해서 서버와 클라이언트는 데이터를 대칭키 방식으로 암호화 한 후에 주고 받는다. 이렇게 하면 안전하게 서로 키를 주고 받았다고 볼 수 있음. 동일한 대칭키를 !

마지막으로 클라이언트와 서버는 핸드쉐이크 단계의 종료를 서로에게 알린다.




2. 세션

세션은 실제로 서버와 클라이언트가 데이터를 주고 받는 단계이다. 이 단계에서 핵심은 정보를 상대방에게 전송하기 전에 session key 값을 이용해서 암호화하고 받는 쪽은 복호화함.





3. 세션 종료
데이터의 전송이 끝나면 SSL 통신이 끝났음을 서로에게 알려준다. 이 때 통신에서 사용한 대칭키인 세션키를 폐기함.
=> 세션 수립과 종료는 아주 짧은 시간에 일어나기 때문에 암호가 노출되어도 상관이없다.

